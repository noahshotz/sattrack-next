name: CI

on:
  push:
    branches:
      - master
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: |
          export NODE_OPTIONS="--max-old-space-size=8192"
          npm run build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          npm test -- --reporter junit --outputFile junit.xml

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: junit-test-results
          path: junit.xml

  deploy_preview:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Install Vercel CLI
        run: npm install --global vercel

      - name: Deploy to Vercel (Preview)
        env:
          VERCEL_TOKEN: ${{ secrets.SATTRACK_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel pull --yes --environment=production --token=$SATTRACK_TOKEN
          vercel build --prod --token=$VERCEL_TOKEN
          vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

  deploy_production:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Install Vercel CLI
        run: npm install --global vercel

      - name: Deploy to Vercel (Production)
        env:
          VERCEL_TOKEN: ${{ secrets.SATTRACK_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel pull --yes --environment=production --token=$SATTRACK_TOKEN
          vercel build --prod --token=$SATTRACK_TOKEN
          vercel deploy --prebuilt --prod --token=$SATTRACK_TOKEN
